Description:                         'Hygieia Quickstart - Application Stack'

Parameters:
  ApiAndDBSG:
    Type:                            "AWS::EC2::SecurityGroup::Id"

  ApiContainerCpu:
    Type:                            "Number"

  ApiContainerMemory:
    Type:                            "String"
    Description:                     "The size of allocated container memory (Gb)"

  ApiContainerImage:
    Type:                            "String"

  ApiContainerSG:
    Type:                            "AWS::EC2::SecurityGroup::Id"

  ApiLoadBalancerSG:
    Type:                            "AWS::EC2::SecurityGroup::Id"

  ApiContainerPort:
    Type:                            "Number"

  ApiHealthCheckPath:
    Type:                            "String"

  AutoScalingRole:
    Type:                            "String"

  DBClusterEndpoint:
    Type:                            "String"

  ExecutionRole:
    Type:                            "String"

  MasterUser:
    Type:                            "String"

  MasterPassword:
    Type:                            "String"

  ServiceName:
    Type:                            "String"

  SubnetA:
    Type:                            "AWS::EC2::Subnet::Id"

  SubnetB:
    Type:                            "AWS::EC2::Subnet::Id"

  TaskRole:
    Type:                            "String"

  UiContainerCpu:
    Type:                            "Number"

  UiContainerMemory:
    Type:                            "String"
    Description:                     "The size of allocated container memory (Gb)"

  UiContainerImage:
    Type:                            "String"

  UiContainerPort:
    Type:                            "Number"

  UiContainerSG:
    Type:                            "AWS::EC2::SecurityGroup::Id"

  UiLoadBalancerSG:
    Type:                            "AWS::EC2::SecurityGroup::Id"

  UiHealthCheckPath:
    Type:                            "String"

  VpcId:
    Type:                            "AWS::EC2::VPC::Id"

Resources:
  EcsCluster:
    Type:                            "AWS::ECS::Cluster"
    Properties:
      ClusterName:                   !Ref ServiceName

  ApiTaskDefinition:
    Type:                            "AWS::ECS::TaskDefinition"
    Properties:
      Cpu:                           !Ref ApiContainerCpu
      Memory:                        !Ref ApiContainerMemory
      NetworkMode:                   "awsvpc"
      ExecutionRoleArn:              !Ref ExecutionRole
      TaskRoleArn:                   !Ref TaskRole
      RequiresCompatibilities:
        - "FARGATE"
      ContainerDefinitions:
        - Name:                      !Sub "${ServiceName}-API"
          Image:                     !Ref ApiContainerImage
          PortMappings:
            - ContainerPort:         !Ref ApiContainerPort
          Environment:
            - Name:                  "SPRING_DATA_MONGODB_HOST"
              Value:                 !Ref DBClusterEndpoint
            - Name:                  "SPRING_DATA_MONGODB_USERNAME"
              Value:                 !Ref MasterUser
            - Name:                  "SPRING_DATA_MONGODB_PORT"
              Value:                 "27017"
            - Name:                  "SPRING_DATA_MONGODB_PASSWORD"
              Value:                 !Ref MasterPassword
          LogConfiguration:
            LogDriver:               "awslogs"
            Options:
              awslogs-region:        !Ref AWS::Region
              awslogs-group:         !Ref ApiLogGroup
              awslogs-stream-prefix: "ecs"
    DependsOn:
      - ApiLogGroup

  ApiLogGroup:
    Type:                            AWS::Logs::LogGroup
    Properties:
      LogGroupName:                  !Sub "/ecs/${ServiceName}-API"

  ApiLoadBalancer:
    Type:                            AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type:                          "application"
      IpAddressType:                 "ipv4"
      Name:                          !Sub "${ServiceName}-API"
      Scheme:                        "internet-facing"
      SecurityGroups:
        - !Ref ApiLoadBalancerSG
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB

  ApiListenerHTTP:
    Type:                            AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:            !Ref ApiTargetGroup
          Type:                      forward
      LoadBalancerArn:               !Ref ApiLoadBalancer
      Port:                          !Ref ApiContainerPort
      Protocol:                      HTTP
    DependsOn:
      - ApiTargetGroup

  ApiTargetGroup:
    Type:                            AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds:    10
      # will look for a 200 status code by default unless specified otherwise
      HealthCheckPath:               !Ref ApiHealthCheckPath
      HealthCheckTimeoutSeconds:     5
      UnhealthyThresholdCount:       2
      HealthyThresholdCount:         2
      Name:                          !Sub "${ServiceName}-API"
      Port:                          !Ref ApiContainerPort
      Protocol:                      HTTP
      TargetGroupAttributes:
        - Key:                       deregistration_delay.timeout_seconds
          Value:                     60 # default is 300
      TargetType:                    ip
      VpcId:                         !Ref VpcId

  ApiService:
    Type:                            AWS::ECS::Service
    Properties:
      LaunchType:                    "FARGATE"
      TaskDefinition:                !Ref ApiTaskDefinition
      HealthCheckGracePeriodSeconds: 1200
      DesiredCount:                  1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp:            ENABLED
          SecurityGroups:
            - !Ref ApiContainerSG
            - !Ref ApiAndDBSG
          Subnets:
            - !Ref SubnetA
            - !Ref SubnetB
      LoadBalancers:
        - TargetGroupArn:            !Ref ApiTargetGroup
          ContainerPort:             !Ref ApiContainerPort
          ContainerName:             !Sub "${ServiceName}-API"
      Cluster:                       !Ref EcsCluster
    DependsOn:
      - ApiListenerHTTP

  UiTaskDefinition:
    Type:                            "AWS::ECS::TaskDefinition"
    Properties:
      Cpu:                           !Ref UiContainerCpu
      Memory:                        !Ref UiContainerMemory
      ExecutionRoleArn:              !Ref ExecutionRole
      TaskRoleArn:                   !Ref TaskRole
      NetworkMode:                   "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      ContainerDefinitions:
        - Name:                      !Sub "${ServiceName}-UI"
          Image:                     !Ref UiContainerImage
          Environment:
            - Name:                  "API_HOST"
              Value:                 !GetAtt ApiLoadBalancer.DNSName
            - Name:                  "API_PORT"
              Value:                 !Ref ApiContainerPort
          PortMappings:
            - ContainerPort:         !Ref UiContainerPort
          LogConfiguration:
            LogDriver:               "awslogs"
            Options:
              awslogs-region:        !Ref AWS::Region
              awslogs-group:         !Ref UiLogGroup
              awslogs-stream-prefix: "ecs"
    DependsOn:
      - UiLogGroup

  UiLogGroup:
    Type:                            AWS::Logs::LogGroup
    Properties:
      LogGroupName:                  !Sub "/ecs/${ServiceName}-UI"

  UiLoadBalancer:
    Type:                            AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type:                          "application"
      IpAddressType:                 "ipv4"
      Name:                          !Sub "${ServiceName}-Ui"
      Scheme:                        "internet-facing"
      SecurityGroups:
        - !Ref UiLoadBalancerSG
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB

  UiListenerHTTP:
    Type:                            AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:            !Ref UiTargetGroup
          Type:                      forward
      LoadBalancerArn:               !Ref UiLoadBalancer
      Port:                          !Ref UiContainerPort
      Protocol:                      HTTP
    DependsOn:
      - UiTargetGroup

  UiTargetGroup:
    Type:                            AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds:    10
      # will look for a 200 status code by default unless specified otherwise
      HealthCheckPath:               !Ref UiHealthCheckPath
      HealthCheckTimeoutSeconds:     5
      UnhealthyThresholdCount:       2
      HealthyThresholdCount:         2
      Name:                          !Sub "${ServiceName}-UI"
      Port:                          !Ref UiContainerPort
      Protocol:                      HTTP
      TargetGroupAttributes:
        - Key:                       deregistration_delay.timeout_seconds
          Value:                     60 # default is 300
      TargetType:                    ip
      VpcId:                         !Ref VpcId

  UiService:
    Type:                            AWS::ECS::Service
    Properties:
      LaunchType:                    "FARGATE"
      TaskDefinition:                !Ref UiTaskDefinition
      DesiredCount:                  1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp:            ENABLED
          SecurityGroups:
            - !Ref UiContainerSG
          Subnets:
            - !Ref SubnetA
            - !Ref SubnetB
      LoadBalancers:
        - TargetGroupArn:            !Ref UiTargetGroup
          ContainerPort:             !Ref UiContainerPort
          ContainerName:             !Sub "${ServiceName}-UI"
      Cluster:                       !Ref EcsCluster
    DependsOn:
      - UiListenerHTTP

Outputs:
  ClusterName:
    Description:                     "ECS cluster name"
    Value:                           !Ref EcsCluster

  UiLoadBalancerUrl:
    Description:                     "URL endpoint of the UI ALB"
    Value:                           !GetAtt UiLoadBalancer.DNSName

  ApiLoadBalancerUrl:
    Description:                     "URL endpoint of the API ALB"
    Value:                           !GetAtt ApiLoadBalancer.DNSName
