Description:                         'Hygieia-Quickstart'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default:                   "Network Configuration"
        Parameters:
          - VpcId
          - SubnetA
          - SubnetB
      -
        Label:
          default:                   "Service Configuration"
        Parameters:
          - ClusterName
          - DatabaseUserName
          - DatabasePassword
    ParameterLabels:
      VpcId:
        default:                     "Which VPC should this be deployed to?"
      SubnetA:
        default:                     "Select first Subnet in first AZ"
      SubnetB:
        default:                     "Select second Subnet in second AZ"
      ClusterName:
        default:                     "ECS Cluster Name"

Parameters:
  VpcId:
    Type:                            "AWS::EC2::VPC::Id"
    Description:                     Enter a valid VPC Id
  ClusterName:
    Description:                     "The cluster name"
    Type:                            "String"
    MinLength:                       "1"
    MaxLength:                       "64"
    AllowedPattern:                  "[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*"
    ConstraintDescription:           "Must begin with a letter and contain only alphanumeric characters."
  DatabaseUsername:
    AllowedPattern:                  "[a-zA-Z0-9]+"
    ConstraintDescription:           must contain only alphanumeric characters.
    Description:                     The database admin account user name.
    MaxLength:                       '16'
    MinLength:                       '1'
    Type:                            String
  DatabasePassword:
    AllowedPattern:                  "^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)"
    ConstraintDescription:           Must contain only alphanumeric characters with at least one capital letter and one number.
    Description:                     The database admin account password.
    MaxLength:                       '41'
    MinLength:                       '8'
    NoEcho:                          'true'
    Type:                            String
  DatabaseName:
    AllowedPattern:                  "[a-zA-Z0-9]+"
    ConstraintDescription:           must contain only alphanumeric characters.
    Description:                     The database name.
    MaxLength:                       '64'
    MinLength:                       '1'
    Type:                            String
  SubnetA:
    Type:                            "AWS::EC2::Subnet::Id"
    Description:                     Enter a valid SubnetId of subnet in AZ1
  SubnetB:
    Type:                            "AWS::EC2::Subnet::Id"
    Description:                     Enter a valid SubnetId of subnet in AZ2

Resources:
  SecurityStack:
    Type:                            "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:                   "security-stack.yml"
      Parameters:
        ServiceName:                 !Ref ClusterName
        VpcId:                       !Ref VpcId
      Tags:
        - Key:                       Name
          Value:
            'Fn::Sub':
              - "${ClusterName}-${ServiceName}-Stack"
              - ServiceName:         "Security"

  EcsCluster:
    Type:                            "AWS::ECS::Cluster"
    Properties:
      ClusterName:                   !Ref ClusterName
    DependsOn:
      - SecurityStack

  ServiceDiscoveryNamespace:
    Type:                            "AWS::ServiceDiscovery::PrivateDnsNamespace"
    Properties:
      Vpc:                           !Ref VpcId
      Name:                          "local"

  MongoDBService:
    Type:                            "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:                   "fargate-micro-service.yml"
      Tags:
        - Key:                       Name
          Value:
            'Fn::Sub':
              - "${ClusterName}-${ServiceName}-Stack"
              - ServiceName:         "MongoDB"
      Parameters:
        ServiceName:                 "MongoDB"
        EcsCluster:                  !Ref EcsCluster
        CreateLoadBalancerResources: "false"
        ServiceDiscoveryNamespace:   !Ref ServiceDiscoveryNamespace
        AutoScalingRole:             !GetAtt SecurityStack.Outputs.AutoScalingRole
        ExecutionRole:               !GetAtt SecurityStack.Outputs.ExecutionRole
        SubnetA:                     !Ref SubnetA
        SubnetB:                     !Ref SubnetB
        TaskRole:                    !GetAtt SecurityStack.Outputs.TaskRole
        VpcId:                       !Ref VpcId
        ContainerCpu:                "2048"
        ContainerMemory:             "4GB"
        ContainerImage:              "excellalabs/mongo"
        ContainerPort:               "27017"
        ContainerSG:                 !GetAtt SecurityStack.Outputs.ContainerSG
        LoadBalancerSG:              !GetAtt SecurityStack.Outputs.ContainerSG
        Env1:
          'Fn::Join':
            - "="
            - - "MONGODB_APPLICATION_DATABASE"
              - !Ref DatabaseName
        Env2:
          'Fn::Join':
            - "="
            - - "MONGODB_ADMIN_PASS"
              - !Ref DatabasePassword
        Env3:
          'Fn::Join':
            - "="
            - - "MONGODB_APPLICATION_USER"
              - !Ref DatabaseUsername
        Env4:
          'Fn::Join':
            - "="
            - - "MONGODB_APPLICATION_PASS"
              - !Ref DatabasePassword

  UiService:
    Type:                            "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:                   "fargate-micro-service.yml"
      Tags:
        - Key:                       Name
          Value:
            Fn::Sub:
              - "${ClusterName}-${ServiceName}-Stack"
              - ServiceName:         "Ui"
      Parameters:
        ServiceName:                 "Ui"
        EcsCluster:                  !Ref EcsCluster
        CreateLoadBalancerResources: "true"
        ServiceDiscoveryNamespace:   !Ref ServiceDiscoveryNamespace
        AutoScalingRole:             !GetAtt SecurityStack.Outputs.AutoScalingRole
        ExecutionRole:               !GetAtt SecurityStack.Outputs.ExecutionRole
        SubnetA:                     !Ref SubnetA
        SubnetB:                     !Ref SubnetB
        TaskRole:                    !GetAtt SecurityStack.Outputs.TaskRole
        VpcId:                       !Ref VpcId
        ContainerCpu:                "512"
        ContainerMemory:             "2GB"
        ContainerImage:              "singlestone/hygieia-ui:0.1.0"
        ContainerPort:               "80"
        ContainerSG:                 !GetAtt SecurityStack.Outputs.ContainerSG
        LoadBalancerSG:              !GetAtt SecurityStack.Outputs.ContainerSG
        HealthCheckPath:             "/"
        Env1:
          Fn::Join:
            - "="
            - - "API_HOST"
              - "api.local"
        Env2:
          Fn::Join:
            - "="
            - - "API_PORT"
              - "8080"
    DependsOn:
      - EcsCluster

  ApiService:
    Type:                            "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:                   "fargate-micro-service.yml"
      Tags:
        - Key:                       Name
          Value:
            Fn::Sub:
              - "${ClusterName}-${ServiceName}-Stack"
              - ServiceName:         "API"
      Parameters:
        ServiceName:                 "API"
        EcsCluster:                  !Ref EcsCluster
        ServiceDiscoveryNamespace:   !Ref ServiceDiscoveryNamespace
        CreateLoadBalancerResources: "false"
        AutoScalingRole:             !GetAtt SecurityStack.Outputs.AutoScalingRole
        ExecutionRole:               !GetAtt SecurityStack.Outputs.ExecutionRole
        SubnetA:                     !Ref SubnetA
        SubnetB:                     !Ref SubnetB
        TaskRole:                    !GetAtt SecurityStack.Outputs.TaskRole
        VpcId:                       !Ref VpcId
        ContainerCpu:                "1024"
        ContainerMemory:             "2GB"
        ContainerImage:              "singlestone/hygieia-api:0.1.0"
        ContainerPort:               "8080"
        ContainerSG:                 !GetAtt SecurityStack.Outputs.ContainerSG
        LoadBalancerSG:              !GetAtt SecurityStack.Outputs.ContainerSG
        HealthCheckPath:             "/api/appinfo"
        Env1:
          Fn::Join:
            - "="
            - - "SPRING_DATA_MONGODB_HOST"
              - "mongodb.local"
        Env2:
          Fn::Join:
            - "="
            - - "SPRING_DATA_MONGODB_PORT"
              - "27017"
        Env3:
          Fn::Join:
            - "="
            - - "SPRING_DATA_MONGODB_USERNAME"
              - !Ref DatabaseUsername
        Env4:
          Fn::Join:
            - "="
            - - "SPRING_DATA_MONGODB_PASSWORD"
              - !Ref DatabasePassword
        Env5:
          Fn::Join:
            - "="
            - - "SPRING_DATA_MONGODB_DATABASE"
              - !Ref DatabaseName

  JenkinsCollector:
    Type:                            "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:                   "fargate-micro-service.yml"
      Tags:
        - Key:                       Name
          Value:
            'Fn::Sub':
              - "${ClusterName}-${ServiceName}-Stack"
              - ServiceName:         "JenkinsCollector"
      Parameters:
        ServiceName:                 "JenkinsCollector"
        EcsCluster:                  !Ref EcsCluster
        ServiceDiscoveryNamespace:   !Ref ServiceDiscoveryNamespace
        CreateLoadBalancerResources: "false"
        AutoScalingRole:             !GetAtt SecurityStack.Outputs.AutoScalingRole
        ExecutionRole:               !GetAtt SecurityStack.Outputs.ExecutionRole
        SubnetA:                     !Ref SubnetA
        SubnetB:                     !Ref SubnetB
        TaskRole:                    !GetAtt SecurityStack.Outputs.TaskRole
        VpcId:                       !Ref VpcId
        ContainerCpu:                "256"
        ContainerMemory:             "1GB"
        ContainerImage:              "singlestone/hygieia-jenkins-collector:0.1.0"
        ContainerPort:               "8080"
        ContainerSG:                 !GetAtt SecurityStack.Outputs.ContainerSG
        LoadBalancerSG:              !GetAtt SecurityStack.Outputs.ContainerSG
        Env1:
          'Fn::Join':
            - "="
            - - "MONGO_PORT"
              - "tcp://mongodb.local:27017"
        Env2:
          'Fn::Join':
            - "="
            - - "HYGIEIA_API_ENV_SPRING_DATA_MONGODB_USERNAME"
              - !Ref DatabaseUsername
        Env3:
          'Fn::Join':
            - "="
            - - "HYGIEIA_API_ENV_SPRING_DATA_MONGODB_PASSWORD"
              - !Ref DatabasePassword
        Env4:
          'Fn::Join':
            - "="
            - - "HYGIEIA_API_ENV_SPRING_DATA_MONGODB_DATABASE"
              - !Ref DatabaseName
        Env5:
          'Fn::Join':
            - "="
            - - "JENKINS_CRON"
              - "0 * * * * *"
        Env6:
          'Fn::Join':
            - "="
            - - "JENKINS_MASTER"
              - "http://ec2-3-90-203-181.compute-1.amazonaws.com:8080"
        Env7:
          'Fn::Join':
            - "="
            - - "JENKINS_USERNAME"
              - "admin"
        Env8:
          'Fn::Join':
            - "="
            - - "JENKINS_API_KEY"
              - "112e4d2b5586eadead37c195927d76f0fa"
        Env9:
          'Fn::Join':
            - "="
            - - "JENKINS_NAME"
              - "Jenkins"
Outputs:
  ApiEndpoint:
    Value:                           !GetAtt [ApiService, "Outputs.Endpoint"]

  UiEndpoint:
    Value:                           !GetAtt [UiService, "Outputs.Endpoint"]

  MongoDBEndpoint:
    Value:                           !GetAtt [MongoDBService, "Outputs.Endpoint"]
